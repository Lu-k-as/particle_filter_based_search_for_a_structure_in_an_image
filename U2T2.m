% Feature extraction Implement a function computeFeatures(image) that% returns a nfeatures ×npixels dimensional feature matrix of an image, including the% following features:% • Grey value of an image% • Gradient in x- and y- direction% • Magnitude of the gradient% • Haar-like features of the gray value image,% using the function computeHaarLike.m.% • Haar-like features of the gradient magnitudes% • x- und y- coordinates of a pixel% Illustrate the features of image 1 using imagesc (use only the first item of% haar-like features). % Once you’ve correctly implemented this function you can use% cache to store computed features on the disk so that they do not have to be recomputed% within each run of yourclear all;load handdata.mat;featuresImage=computeFeatures(images{1,1});featuresImage1Cache=cache(@computeFeatures,images{1,1});featuresImage1Cache(8,146);featuresImage1Cache(7,146);%grey valuesgrayValues = reshape(featuresImage1Cache(1,:),size(images{1,1},1), size(images{1,1},2));figure;imagesc(grayValues);colorbaraxis equaltitle('gray Values');exportgraphics(gcf,'FigureGrey Values.png','Resolution',300)%x and y GradientxGradient = reshape(featuresImage1Cache(2,:),size(images{1,1},1), size(images{1,1},2));yGradient = reshape(featuresImage1Cache(3,:),size(images{1,1},1), size(images{1,1},2));figure;subplot(1,2,1)imagesc(xGradient);axis equaltitle('x Gradient');subplot(1,2,2)imagesc(yGradient);axis equaltitle('y Gradient');exportgraphics(gcf,'FigureGradients.png','Resolution',300)% gradient strengthgradientStrength = reshape(featuresImage1Cache(4,:),size(images{1,1},1), size(images{1,1},2));figure;imagesc(gradientStrength);axis equaltitle('gradient Strength');exportgraphics(gcf,'FigureGradientStrength.png','Resolution',300)% haar likehaarLike = reshape(featuresImage1Cache(5,:),size(images{1,1},1), size(images{1,1},2));figure;subplot(1,2,1)imagesc(haarLike);axis equaltitle('Haar Like Features');% haar like Gradient StrengthhaarLikeGradStrength = reshape(featuresImage1Cache(6,:),size(images{1,1},1), size(images{1,1},2));subplot(1,2,2)imagesc(haarLikeGradStrength);axis equaltitle('Haar features gradient strength');exportgraphics(gcf,'FigureHaarLike.png','Resolution',300)% x and y coordinatesxCoord = reshape(featuresImage1Cache(7,:),size(images{1,1},1), size(images{1,1},2));yCoord = reshape(featuresImage1Cache(8,:),size(images{1,1},1), size(images{1,1},2));%xCoord = vec2mat(featuresImage1Cache(7,:),143);%yCoord = vec2mat(featuresImage1Cache(8,:),143);figure;subplot(1,2,1)imagesc(xCoord);axis equaltitle('x-Coordinates');subplot(1,2,2)imagesc(yCoord);axis equaltitle('y-Coordinates');exportgraphics(gcf,'FigureCoordinates.png','Resolution',300)